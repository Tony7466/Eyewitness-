From: Sophie Brun <sophie@offensive-security.com>
Date: Thu, 10 Oct 2019 09:36:25 +0200
Subject: Switch to Python 3

Last-Update: 2019-10-10
---
 Python/MiktoList.py    | 22 +++++++++++-----------
 Python/Recategorize.py | 24 ++++++++++++------------
 Python/Search.py       | 24 ++++++++++++------------
 3 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/Python/MiktoList.py b/Python/MiktoList.py
index 133824d..78553ae 100755
--- a/Python/MiktoList.py
+++ b/Python/MiktoList.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import glob
 import os
@@ -12,34 +12,34 @@ from modules.db_manager import DB_Manager
 def open_file_input(cli_parsed):
     files = glob.glob(os.path.join(cli_parsed.d, 'report.html'))
     if len(files) > 0:
-        print 'Would you like to open the report now? [Y/n]',
+        print(('Would you like to open the report now? [Y/n]'), end=' ')
         while True:
             try:
-                response = raw_input().lower()
-                if response is "":
+                response = input().lower()
+                if response == "":
                     return True
                 else:
                     return strtobool(response)
             except ValueError:
-                print "Please respond with y or n",
+                print(("Please respond with y or n"), end=' ')
     else:
-        print '[*] No report files found to open, perhaps no hosts were successful'
+        print('[*] No report files found to open, perhaps no hosts were successful')
         return False
 
 if __name__ == "__main__":
     if len(sys.argv) < 2:
-        print 'Create a file containing urls for splash pages and 404s to feed to Mikto\n'
-        print '[*] Usage: python MiktoList.py <dbpath> <outfile>'
-        print 'DBPath should point to the ew.db file in your EyeWitness output folder'
+        print('Create a file containing urls for splash pages and 404s to feed to Mikto\n')
+        print('[*] Usage: python MiktoList.py <dbpath> <outfile>')
+        print('DBPath should point to the ew.db file in your EyeWitness output folder')
         sys.exit()
     db_path = sys.argv[1]
     outfile = sys.argv[2]
     if not os.path.isfile(db_path):
-        print '[*] No valid db path provided'
+        print('[*] No valid db path provided')
         sys.exit()
     dbm = DB_Manager(db_path)
     dbm.open_connection()
     results = dbm.get_mikto_results()
     with open(outfile, 'w') as f:
         f.writelines([x.remote_system + '\n' for x in results])
-    print 'Wrote {0} URLs to {1}'.format(len(results), outfile)
\ No newline at end of file
+    print(('Wrote {0} URLs to {1}'.format(len(results), outfile)))
diff --git a/Python/Recategorize.py b/Python/Recategorize.py
index 674771d..5edb53f 100755
--- a/Python/Recategorize.py
+++ b/Python/Recategorize.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import glob
 import os
@@ -13,29 +13,29 @@ from modules.reporting import sort_data_and_write
 def open_file_input(cli_parsed):
     files = glob.glob(os.path.join(cli_parsed.d, 'report.html'))
     if len(files) > 0:
-        print 'Would you like to open the report now? [Y/n]',
+        print('Would you like to open the report now? [Y/n]', end=' ')
         while True:
             try:
-                response = raw_input().lower()
-                if response is "":
+                response = input().lower()
+                if response == "":
                     return True
                 else:
                     return strtobool(response)
             except ValueError:
-                print "Please respond with y or n",
+                print("Please respond with y or n", end=' ')
     else:
-        print '[*] No report files found to open, perhaps no hosts were successful'
+        print('[*] No report files found to open, perhaps no hosts were successful')
         return False
 
 if __name__ == "__main__":
     if len(sys.argv) < 2:
-        print 'Recategorize a previously completed EyeWitness scan to account for updates. This can take a while!\n'
-        print '[*] Usage: python Recategorize.py <dbpath>'
-        print 'DBPath should point to the ew.db file in your EyeWitness output folder'
+        print('Recategorize a previously completed EyeWitness scan to account for updates. This can take a while!\n')
+        print('[*] Usage: python Recategorize.py <dbpath>')
+        print('DBPath should point to the ew.db file in your EyeWitness output folder')
         sys.exit()
     db_path = sys.argv[1]
     if not os.path.isfile(db_path):
-        print '[*] No valid db path provided'
+        print('[*] No valid db path provided')
         sys.exit()
     dbm = DB_Manager(db_path)
     dbm.open_connection()
@@ -46,10 +46,10 @@ if __name__ == "__main__":
     for f in files:
         os.remove(f)
     results = dbm.recategorize()
-    print 'Writing report'
+    print('Writing report')
     sort_data_and_write(cli_parsed, results)
     newfiles = glob.glob(cli_parsed.d + '/report.html')
     if open_file_input(cli_parsed):
         for f in newfiles:
             webbrowser.open(f)
-        sys.exit()
\ No newline at end of file
+        sys.exit()
diff --git a/Python/Search.py b/Python/Search.py
index 30f14cf..38d153d 100755
--- a/Python/Search.py
+++ b/Python/Search.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import glob
 import os
@@ -13,40 +13,40 @@ from modules.reporting import search_report
 def open_file_input(cli_parsed):
     files = glob.glob(os.path.join(cli_parsed.d, 'search.html'))
     if len(files) > 0:
-        print 'Would you like to open the report now? [Y/n]',
+        print('Would you like to open the report now? [Y/n]', end=' ')
         while True:
             try:
-                response = raw_input().lower()
-                if response is "":
+                response = input().lower()
+                if response == "":
                     return True
                 else:
                     return strtobool(response)
             except ValueError:
-                print "Please respond with y or n",
+                print("Please respond with y or n", end=' ')
     else:
-        print '[*] No report files found to open, perhaps no hosts were successful'
+        print('[*] No report files found to open, perhaps no hosts were successful')
         return False
 
 
 if __name__ == "__main__":
     if len(sys.argv) < 3:
-        print 'Search a previously completed EyeWitness scan (HTTP page title/source)\n'
-        print '[*] Usage: python Search.py <dbpath> <searchterm>'
-        print 'DBPath should point to the ew.db file in your EyeWitness output folder'
+        print('Search a previously completed EyeWitness scan (HTTP page title/source)\n')
+        print('[*] Usage: python Search.py <dbpath> <searchterm>')
+        print('DBPath should point to the ew.db file in your EyeWitness output folder')
         sys.exit()
     db_path = sys.argv[1]
     if not os.path.isfile(db_path):
-        print '[*] No valid db path provided'
+        print('[*] No valid db path provided')
         sys.exit()
     search_term = sys.argv[2]
     dbm = DB_Manager(db_path)
     dbm.open_connection()
     results = dbm.search_for_term(search_term)
     if len(results) == 0:
-        print 'No results found!'
+        print('No results found!')
         sys.exit()
     else:
-        print 'Found {0} Results!'.format(str(len(results)))
+        print('Found {0} Results!'.format(str(len(results))))
     cli_parsed = dbm.get_options()
     cli_parsed.results = 25
     cli_parsed.d = os.path.dirname(db_path)
